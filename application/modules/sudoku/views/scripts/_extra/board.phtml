<?php
$cols = 9; // 1..9
$rows = 9;

/** @var Application_Model_Game_Sudoku $sudoku */
$sudoku = $this->sudoku;
$game = $sudoku->getParameters();

/**
 * @param int $row
 * @param int $col
 * @return bool
 */
function isGray ($row, $col) {
    $grayRow = (bool)(ceil($row / 3) % 2); // 111000111
    $grayCol = (bool)(ceil($col / 3) % 2); // 111000111
    $isGray = $grayRow == $grayCol;
    return $isGray;
}

function createCell ($game, $row, $col) {
    $isGray = isGray($row, $col) ? 'gray' : '';
    $cellCoords = $row . $col;
    $open = 'open';
    $empty = 'empty';
    $locked = '';
    $number = '';
    if (!empty($game[Application_Model_Game_Sudoku::PARAMETER_KEY_CHECKED_CELLS][$cellCoords])) {
        $number = $game[Application_Model_Game_Sudoku::PARAMETER_KEY_CHECKED_CELLS][$cellCoords];
        $empty = '';
    }
    if (!empty($game[Application_Model_Game_Sudoku::PARAMETER_KEY_OPEN_CELLS][$cellCoords])) {
        $number = $game[Application_Model_Game_Sudoku::PARAMETER_KEY_OPEN_CELLS][$cellCoords];
        $open = '';
        $empty = '';
        $locked = 'locked';
    }
    $classes = [
        'cell',
        'row-' . $row,
        'col-' . $col,
        $isGray,
        $open,
        $empty,
        $locked,
    ];
?>
<td
    class="<?php echo implode(' ', $classes); ?>"
    data-row="<?php echo $row; ?>"
    data-col="<?php echo $col; ?>"
    data-number="<?php echo $number; ?>"
    >
    <?php echo $number; ?>
</td>
<?php
} // createCell
?>
<div class="sudoku-table"
     data-game-id="<?php echo $sudoku->getId(); ?>"
     ondragstart="return false;"
     ondrop="return false;"
     data-selected-cell=""
     data-hovered-number=""
    >

    <div class="game-params">
        Cells opened initially: <span><?php echo count($game['openCells']);?></span>
    </div>

    <div class="congratulations">
        <div class="message">
            Congratulations!<br>
            You have solved this sudoku!
        </div>
    </div>

    <table class="sudoku-board">
        <?php for ($r = 1; $r <= $rows; $r++): ?>
        <tr>
            <?php for ($c = 1; $c <= $cols; $c++): ?>
                <?php createCell($game, $r, $c); ?>
            <?php endfor; ?>
        </tr>
        <?php endfor; ?>
    </table>

    <div class="sudoku-numpad">
        <table>
            <?php /*
            <tr>
                <td colspan="3" class="close"><i class="icon-remove-circle"></i></td>
            </tr>
            */ ?>
            <?php $number = 1; ?>
            <?php for ($r = 1; $r <= 3; $r++): ?>
            <tr>
                <?php for ($c = 1; $c <= 3; $c++): ?>
                    <td class="number enabled" data-number="<?php echo $number; ?>">
                        <?php if ($number == 3): ?><?php endif; ?>
                        <?php echo $number; ?>
                    </td>
                    <?php $number++; ?>
                <?php endfor; ?>
            </tr>
            <?php endfor; ?>
            <tr>
                <td class="number clear" colspan="3" data-number="">clear</td>
            </tr>
        </table>
    </div>

    <div class="additional-buttons">
        <button class="undo-move btn btn-mini disabled" data-moves=""><i class="icon-chevron-left"></i> Undo</button>
        <button class="redo-move btn btn-mini disabled" data-moves=""><i class="icon-chevron-right"></i>Redo</button>
        <button class="check-field btn btn-mini">Check</button>
        <button class="clear-field btn btn-mini btn-danger">Clear</button>
    </div>
</div>

<?php $this->headScript()->appendScript('var $game = new window.Sudoku(\'.sudoku-table\');'); ?>
